---
## Front matter
title: "Доклад"
subtitle: "Современные методы криптографии"
author: "Алиса Алексеевна Скобеева"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: IBM Plex Serif
romanfont: IBM Plex Serif
sansfont: IBM Plex Sans
monofont: IBM Plex Mono
mathfont: STIX Two Math
mainfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
romanfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
sansfontoptions: Ligatures=Common,Ligatures=TeX,Scale=MatchLowercase,Scale=0.94
monofontoptions: Scale=MatchLowercase,Scale=0.94,FakeStretch=0.9
mathfontoptions:
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Введение

В эпоху цифровой трансформации обеспечение информационной безопасности приобретает первостепенное значение. Криптография, как наука о защите информации, является ключевым инструментом в решении этой задачи. Доклад охватывает современные подходы, включая симметричное и асимметричное шифрование, хэш-функции и перспективные направления, такие как квантовая криптография. Цель - представить целостное представление о современных подходах к защите информации и тенденциях развития криптографии.

# Актуальность темы

Криптография критически важна для защиты данных в цифровом мире, сталкивающемся с ростом киберугроз и развитием квантовых компьютеров. Обеспечение конфиденциальности, целостности и подлинности информации – ключевая задача для экономики, безопасности и прав личности, делающая изучение и совершенствование криптографических методов крайне актуальным.

# Объект и предмет исследования

Объект исследования: Методы криптографии, используемые для защиты информации в современных цифровых системах.

Предмет исследования: Криптографические алгоритмы (симметричное и асимметричное шифрование, хэш-функции), протоколы и подходы, обеспечивающие конфиденциальность, целостность и аутентичность данных, а также их устойчивость к современным угрозам и вычислительным возможностям.

# Основная часть

## Симметричное шифрование

1. Основы симметричного шифрования:

Симметричное шифрование – это метод шифрования, при котором для шифрования и дешифрования данных используется один и тот же секретный ключ. Этот ключ должен быть известен как отправителю, так и получателю сообщения.

Принцип работы:
  •  Шифрование: Отправитель использует секретный ключ для преобразования открытого текста (обычного, не зашифрованного текста) в зашифрованный текст (шифротекст).
  •  Дешифрование: Получатель, имея тот же самый секретный ключ, использует его для обратного преобразования зашифрованного текста в исходный открытый текст.

2. Алгоритм AES (Advanced Encryption Standard):

  •  Описание: AES – это современный и широко используемый алгоритм симметричного шифрования. Он был разработан в 2000 году и стал стандартом де-факто для многих приложений.
  •  Безопасность: AES считается одним из самых безопасных алгоритмов симметричного шифрования. Он устойчив к большинству известных атак.
  •  Ключи: AES использует ключи различной длины: 128 бит, 192 бита или 256 бит. Чем длиннее ключ, тем сложнее его взломать. Наиболее распространенным является ключ длиной 128 бит, который обеспечивает достаточную безопасность для большинства приложений.
  •  Работа: AES работает путем многократного выполнения нескольких раундов преобразований над данными. Каждый раунд включает в себя подстановку, перестановку и смешивание битов данных.

3. Применение симметричного шифрования:

  •  Защита Wi-Fi сетей (WPA2/3): Симметричное шифрование AES используется для защиты Wi-Fi сетей с помощью протоколов WPA2 и WPA3. Это обеспечивает конфиденциальность данных, передаваемых по беспроводной сети.
  •  Шифрование файлов на жестком диске: Симметричное шифрование используется для защиты конфиденциальных файлов и папок на жестком диске. Это позволяет предотвратить несанкционированный доступ к данным в случае кражи или потери устройства.
  •  Шифрование баз данных: Симметричное шифрование используется для защиты конфиденциальной информации, хранящейся в базах данных.
  •  VPN (Virtual Private Network): Симметричное шифрование является основой для многих VPN протоколов, обеспечивающих безопасное соединение с удаленными серверами и защиту конфиденциальности в интернете.
  •  Другие приложения: Симметричное шифрование используется во многих других приложениях, где требуется быстрая и надежная защита данных, например, в банковских транзакциях, электронных платежах и защищенной переписке.

4. Главный недостаток симметричного шифрования:

  •  Проблема безопасной передачи ключа: Самым большим недостатком симметричного шифрования является необходимость безопасной передачи секретного ключа между отправителем и получателем.
  •  Риски: Если ключ будет перехвачен злоумышленником, то он сможет расшифровать все сообщения, зашифрованные с помощью этого ключа.
  •  Решения: Для решения этой проблемы используются различные методы, такие как:
    *   Передача ключа лично: Самый безопасный способ, но не всегда возможный.
    *   Использование курьерской службы: Более безопасный способ, чем передача по электронной почте, но все еще есть риск перехвата.
    *   Криптографические протоколы: Использование специальных криптографических протоколов, таких как Diffie-Hellman, которые позволяют безопасно обмениваться ключами по открытому каналу связи.
    *   Асимметричное шифрование: Использование асимметричного шифрования для шифрования секретного ключа симметричного шифрования и передачи его получателю.

5. Вывод:

Симметричное шифрование - это эффективный и широко используемый метод защиты данных, который обеспечивает высокую скорость шифрования и дешифрования. Однако его главным недостатком является проблема безопасной передачи ключа. Несмотря на это, симметричное шифрование остается важным элементом современной криптографии и используется в различных приложениях, где требуется быстрая и надежная защита данных.

## Ассиметричное шифрования

1. Основы асимметричного шифрования:

Асимметричное шифрование, также известное как криптография с открытым ключом, — это метод шифрования, в котором используются два ключа: открытый ключ и закрытый ключ. Эти ключи математически связаны между собой, но вычислительно невозможно получить закрытый ключ, зная только открытый ключ.

Принцип работы:
    *   Создание ключей: Каждый участник связи (например, пользователь или сервер) генерирует свою пару ключей – открытый и закрытый.
    *   Распространение открытого ключа: Открытый ключ можно свободно распространять среди всех, с кем вы планируете обмениваться сообщениями. Это как ваш публичный адрес электронной почты.
    *   Хранение закрытого ключа: Закрытый ключ должен храниться в секрете и быть доступным только владельцу. Это как личный пароль от вашего почтового ящика.
    *   Шифрование: Чтобы отправить сообщение, отправитель использует открытый ключ получателя для шифрования сообщения.
    *   Дешифрование: Получатель использует свой закрытый ключ для дешифрования сообщения, зашифрованного его открытым ключом.

3. Алгоритм RSA (Rivest-Shamir-Adleman):

  •  Описание: RSA — это один из самых известных и широко используемых алгоритмов асимметричного шифрования. Он был разработан в 1977 году и до сих пор считается одним из самых надежных алгоритмов.
  •  Принцип работы: RSA основан на математической сложности задачи факторизации больших чисел.
  •  Генерация ключей:
    *   Выбираются два больших простых числа (p и q).
    *   Вычисляется их произведение n = p * q (это число используется как часть открытого и закрытого ключей).
    *   Вычисляется функция Эйлера φ(n) = (p-1) * (q-1).
    *   Выбирается целое число e (1 < e < φ(n)), взаимно простое с φ(n) (это число является открытой экспонентой).
    *   Вычисляется целое число d, являющееся мультипликативным обратным к e по модулю φ(n) (это число является закрытой экспонентой).
    *   Открытый ключ: (n, e)
    *   Закрытый ключ: (n, d)
  •  Шифрование: C = M<sup>e</sup> mod n (где M - открытый текст, C - зашифрованный текст)
  •  Дешифрование: M = C<sup>d</sup> mod n

4. Применение асимметричного шифрования:

  •  HTTPS (Hypertext Transfer Protocol Secure): Асимметричное шифрование является основой протокола HTTPS, который обеспечивает безопасный просмотр веб-сайтов. Когда вы видите значок замка в адресной строке браузера, это означает, что ваше соединение с сайтом защищено с помощью HTTPS.
  •  Электронные подписи: Асимметричное шифрование используется для создания электронных подписей, которые подтверждают подлинность документов и электронных сообщений. Отправитель шифрует хэш документа своим закрытым ключом, создавая электронную подпись. Получатель проверяет подпись, используя открытый ключ отправителя.
  •  Шифрование электронной почты: Асимметричное шифрование используется для защиты конфиденциальности электронной переписки. Отправитель шифрует сообщение открытым ключом получателя, чтобы только получатель мог его расшифровать своим закрытым ключом.
  •  Управление ключами: Асимметричное шифрование используется для безопасного обмена ключами симметричного шифрования по открытому каналу связи.

5. Преимущества и недостатки асимметричного шифрования:

  •  Преимущества:
    *   Безопасная передача ключей: Главное преимущество асимметричного шифрования — это отсутствие необходимости безопасной передачи секретного ключа. Открытый ключ можно свободно распространять.
    *   Электронные подписи: Асимметричное шифрование позволяет создавать электронные подписи, которые подтверждают подлинность документов.
    *   Удобство: Асимметричное шифрование упрощает управление ключами, особенно в больших сетях.

  •  Недостатки:
    *   Медленнее, чем симметричное шифрование: Асимметричное шифрование требует больших вычислительных затрат и работает медленнее, чем симметричное шифрование.
    *   Более сложные алгоритмы: Алгоритмы асимметричного шифрования сложнее, чем алгоритмы симметричного шифрования.
    *   Уязвимость к атакам: Хотя RSA считается достаточно надежным алгоритмом, он уязвим к некоторым атакам, особенно если используются короткие ключи.

6. Заключение:

Асимметричное шифрование - это важный метод защиты данных, который позволяет безопасно обмениваться сообщениями по открытым каналам связи и создавать электронные подписи. Хотя асимметричное шифрование работает медленнее, чем симметричное, оно является незаменимым инструментом для обеспечения безопасности в современном цифровом мире.

## Хэш-функции

Хэш-функция — это математическая функция, которая принимает входные данные (сообщение, файл, пароль и т.д.) любого размера и преобразует их в выходные данные фиксированного размера, называемые хэшем, хэш-значением, дайджестом (digest) или отпечатком.

1. Основы хэш-функций:

  •  Односторонность: Хэш-функции являются односторонними, что означает, что вычислительно невозможно (или крайне сложно) восстановить исходные данные по их хэш-значению.
  •  Представление: Представьте, что у вас есть большая книга, и вам нужно создать краткую аннотацию (хэш), которая будет однозначно идентифицировать эту книгу. По аннотации невозможно восстановить полный текст книги.
  •  Применение: Хэш-функции широко используются в криптографии и информатике для различных целей.

2. Свойства криптографических хэш-функций:

Криптографические хэш-функции должны обладать следующими свойствами, чтобы быть полезными для защиты информации:

  •  Детерминированность: Одна и та же входная строка всегда должна давать один и тот же хэш-значение.
  •  Быстрота вычисления: Хэш-функция должна быстро вычислять хэш-значение для любого входного сообщения.
  •  Односторонность (preimage resistance): Для заданного хэш-значения должно быть вычислительно невозможно найти исходное сообщение, которое бы давало этот хэш.
  •  Устойчивость к нахождению второго прообраза (second preimage resistance): Для заданного входного сообщения и его хэш-значения должно быть вычислительно невозможно найти другое входное сообщение, которое бы давало то же самое хэш-значение.
  •  Устойчивость к коллизиям (collision resistance): Должно быть вычислительно невозможно найти два разных входных сообщения, которые бы давали одно и то же хэш-значение. Коллизия - это когда два разных входных сообщения дают одинаковый хэш.

3. Алгоритм SHA-256 (Secure Hash Algorithm 256-bit):

  •  Описание: SHA-256 - это одна из самых распространенных криптографических хэш-функций. Он разработан Агентством национальной безопасности США (NSA) и опубликован в 2001 году.
  •  Размер хэша: SHA-256 создает хэш-значение длиной 256 бит (32 байта).
  •  Принцип работы: SHA-256 работает путем выполнения ряда сложных математических операций над входными данными, включая битовые операции, сложение по модулю и нелинейные функции.
  •  Безопасность: SHA-256 считается достаточно безопасным алгоритмом, хотя и были предприняты некоторые атаки на его структуру. На практике он все еще широко используется.

4. Применение хэш-функций:

  •  Проверка целостности файлов: Когда вы скачиваете файл из Интернета, вы можете сравнить его хэш-значение с хэш-значением, опубликованным на сайте разработчика. Если хэш-значения совпадают, это означает, что файл не был поврежден или изменен во время скачивания. Это гарантирует, что вы получили именно тот файл, который был загружен разработчиком.
  •  Хранение паролей: Сайты хранят пароли пользователей не в открытом виде, а в виде хэш-значений. Когда пользователь вводит свой пароль, сайт вычисляет его хэш-значение и сравнивает его с хэш-значением, хранящимся в базе данных. Это позволяет защитить пароли в случае утечки данных. Злоумышленник, получивший доступ к базе данных, увидит только хэш-значения паролей, и не сможет узнать сами пароли (благодаря односторонности хэш-функции).
  •  Цифровые подписи: Хэш-функции используются для создания цифровых подписей, которые обеспечивают аутентификацию и целостность цифровых документов.
  •  Блокчейны: Хэш-функции являются ключевым компонентом блокчейнов, таких как Bitcoin. Они используются для связывания блоков в цепочку и для обеспечения целостности данных, хранящихся в блокчейне.
  •  Контрольные суммы: Хэш-функции также используются для создания контрольных сумм, которые помогают обнаруживать ошибки при передаче данных.

5. Важность криптографической стойкости:

  •  Односторонность (Preimage Resistance): Если хэш-функция не является односторонней, то злоумышленник может восстановить исходные данные по их хэш-значению, что делает ее бесполезной для защиты информации.
  •  Устойчивость к коллизиям (Collision Resistance): Если хэш-функция не устойчива к коллизиям, то злоумышленник может найти два разных сообщения, которые дадут одинаковый хэш. Это может позволить ему подменить одно сообщение другим, сохранив при этом правильный хэш.

6. Вывод:

Хэш-функции - это важный инструмент для защиты информации, который используется во многих приложениях. Они обеспечивают целостность данных, защиту паролей и аутентификацию цифровых документов. Важно использовать криптографически стойкие хэш-функции, чтобы гарантировать, что данные надежно защищены от несанкционированного доступа и подделки.

## Квантовая криптография

Квантовая криптография (QKD - Quantum Key Distribution) — это метод безопасной передачи криптографических ключей, основанный на законах квантовой механики. В отличие от классической криптографии, которая основана на математической сложности вычислений, квантовая криптография использует фундаментальные физические законы для обеспечения безопасности.

1. Основы квантовой криптографии:

  •  Безопасность на основе физики: Главное преимущество квантовой криптографии заключается в том, что её безопасность основана не на вычислительной сложности (которая может быть преодолена с появлением более мощных компьютеров), а на фундаментальных законах физики, делая её теоретически невзламываемой.
  •  Ключевые понятия:
    *   Кубит (qubit): В отличие от классического бита, который может быть либо 0, либо 1, кубит может находиться в состоянии суперпозиции, то есть одновременно быть и 0, и 1.
    *   Квантовая суперпозиция: Кубит может существовать как в состоянии 0, так и в состоянии 1, или в любой линейной комбинации этих состояний.
    *   Квантовая запутанность: Два или более кубита могут быть связаны между собой таким образом, что состояние одного кубита мгновенно влияет на состояние другого, независимо от расстояния между ними.
    *   Принцип неопределенности Гейзенберга: Попытка измерить квантовое состояние кубита изменяет это состояние, что позволяет обнаружить любые попытки перехвата информации.

2. Протокол BB84 (Bennett-Brassard 1984):

  •  Описание: BB84 - это один из самых известных и старых протоколов квантовой криптографии. Он был разработан Чарльзом Беннеттом и Жилем Брассаром в 1984 году.
  •  Принцип работы:
    *   Отправитель (Alice) кодирует информацию: Alice генерирует случайную последовательность битов (0 и 1) и кодирует каждый бит с помощью одного из четырех возможных состояний поляризации фотона: 0°, 45°, 90° или 135°. Она выбирает состояние поляризации случайным образом для каждого бита.
    *   Передача фотонов: Alice отправляет эти фотоны по квантовому каналу (например, по оптоволоконному кабелю) получателю (Bob).
    *   Получатель (Bob) измеряет поляризацию: Bob получает фотоны и измеряет их поляризацию случайным образом, используя один из двух возможных базисов: прямой (0° и 90°) или диагональный (45° и 135°).
    *   Обсуждение базисов: Alice и Bob общаются по открытому (но прослушиваемому) каналу связи и сравнивают базисы, которые они использовали для кодирования и измерения каждого бита. Они отбрасывают те биты, для которых они использовали разные базисы.
    *   Формирование ключа: Оставшиеся биты формируют общий секретный ключ.
    *   Обнаружение подслушивания: Alice и Bob случайным образом выбирают небольшую часть битов из общего ключа и сравнивают их по открытому каналу. Если есть значительное количество ошибок, это означает, что кто-то пытался прослушать канал, и ключ необходимо отбросить.

3. Преимущества квантовой криптографии:

  •  Абсолютная безопасность: Главное преимущество квантовой криптографии – это её теоретическая невзламываемость. Любая попытка перехвата ключа немедленно изменит состояние кубитов и будет обнаружена.
  •  Независимость от вычислительной мощности: В отличие от классических криптографических алгоритмов, безопасность квантовой криптографии не зависит от вычислительной мощности злоумышленника. Даже с появлением квантовых компьютеров квантовая криптография останется безопасной.
  •  Обнаружение подслушивания: Квантовая криптография позволяет обнаруживать любые попытки перехвата информации, что невозможно в классической криптографии.

4. Недостатки квантовой криптографии:

  •  Ограниченное расстояние: Квантовые сигналы очень чувствительны к помехам и затуханию, что ограничивает расстояние, на которое можно безопасно передавать ключ.
  •  Дороговизна: Оборудование для квантовой криптографии очень дорогое, что ограничивает её применение.
  •  Сложность реализации: Квантовая криптография требует высокой точности и сложных технических решений.
  •  Только для передачи ключей: Квантовая криптография предназначена только для безопасной передачи ключей. Для шифрования самих данных необходимо использовать другие методы.

5. Применение квантовой криптографии:

  •  Защита правительственной связи: Квантовая криптография используется для защиты конфиденциальной информации, передаваемой между правительственными учреждениями.
  •  Защита финансовых транзакций: Квантовая криптография используется для защиты финансовых транзакций и предотвращения киберпреступлений в финансовой сфере.
  •  Защита критической инфраструктуры: Квантовая криптография используется для защиты критической инфраструктуры, такой как электростанции и системы водоснабжения.

6. Заключение:

Квантовая криптография - это перспективная область, которая может изменить подход к защите информации в будущем. Хотя квантовая криптография все еще находится на ранней стадии развития, она уже демонстрирует потенциал для обеспечения абсолютной безопасности передачи ключей. По мере развития технологий и снижения стоимости оборудования квантовая криптография может стать широко используемым методом защиты информации в различных сферах.


# Выводы

Анализ современных методов криптографии подтверждает необходимость постоянного совершенствования подходов к защите информации. Существующие алгоритмы требуют адаптации к новым угрозам, а перспективные направления, такие как квантовая криптография, нуждаются в дальнейшей разработке. Непрерывные исследования и повышение осведомленности пользователей остаются ключевыми для обеспечения безопасности в цифровом мире.
